// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

$color-white: #fff;
$color-black: #000;
// FONT VARIABLES
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

//TRANSITION VARIABLES
$transition: all .2s;

//BREAKPOINTS VARIABLES
$breakpoint-largest: 1200;
$breakpoint-large: 1000;
$breakpoint-medium: 800;
$breakpoint-small: 600;
$breakpoint-smallest: 500;

//media queries
@mixin respond($width, $maxOrMin: max) {
    @if($width and $maxOrMin == max) {
        @media only screen and (max-width: #{$width / 16}em) { @content; }
    } @else if($width and $maxOrMin == min){
        @media only screen and (min-width: #{$width / 16}em) { @content; }
    } @else {
        @error "Unknown boundaries"
    }
}

//Global Reset
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; //1rem == 10px
    @include respond($breakpoint-largest) { font-size: 50%; } //1rem == 8px
}

ul, ol {
    list-style: none;
}

%clear-border-and-decoration {
    outline: none;
    border: none;
    font: inherit;
    color: inherit;
    text-decoration: none;
}

a {
    &:link,
    &:visited {
        @extend %clear-border-and-decoration;
    }
}

button {
        @extend %clear-border-and-decoration;
        cursor: pointer;
    background: none;
}

input {
    @extend %clear-border-and-decoration;
    
}

//Main Grid Styling
.container {
    display: grid;
    grid-template-rows: 80vh auto 40vw repeat(4, auto);
    grid-template-columns: [sidebar-start] 8rem [sidebar-end full_bleed-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end] ) [center-end] minmax(6rem, 1fr) [full_bleed-end];
    @include respond($breakpoint-large) {
        grid-template-rows: 6rem 80vh auto 40vw repeat(4, auto);
        grid-template-columns: [full_bleed-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end] ) [center-end] minmax(6rem, 1fr) [full_bleed-end];
    }
    @include respond($breakpoint-medium) {
        grid-template-rows: 6rem calc(100vh - 6rem);
    }
}
//UTILITY
.mb-sm { margin-bottom: 2rem !important;}
.mb-md { margin-bottom: 3rem !important;}
.mb-lg { margin-bottom: 4rem !important;}
.mb-hg { margin-bottom: 8rem !important;}


//button elements
.btn {
    color: $color-white;
    background-color: $color-primary;
    font-family: $font-display;
    font-size: 1.5rem;
    font-weight: 400;
    line-height: 1;
    text-transform: uppercase;
    padding: 1.2em 2em;
    transition: $transition;

    &:hover, &:focus {
        background-color: $color-primary-dark;
    }
}
